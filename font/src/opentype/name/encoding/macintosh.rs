#[derive(Debug, PartialEq)]
pub enum MacintoshEncoding {
  Roman,
  Japanese,
  ChineseTraditional,
  Korean,
  Arabic,
  Hebrew,
  Greek,
  Russian,
  RSymbol,
  Devanagari,
  Gurmukhi,
  Gujarati,
  Oriya,
  Bengali,
  Tamil,
  Telugu,
  Kannada,
  Malayalam,
  Sinhalese,
  Burmese,
  Khmer,
  Thai,
  Laotian,
  Georgian,
  Armenian,
  ChineseSimplified,
  Tibetan,
  Mongolian,
  Geez,
  Slavic,
  Vietnamese,
  Sindhi,
  Uninterpreted,
}

impl MacintoshEncoding {
  pub fn lookup(encoding_id: u16) -> Option<MacintoshEncoding> {
    match encoding_id {
      0 => Some(MacintoshEncoding::Roman),
      1 => Some(MacintoshEncoding::Japanese),
      2 => Some(MacintoshEncoding::ChineseTraditional),
      3 => Some(MacintoshEncoding::Korean),
      4 => Some(MacintoshEncoding::Arabic),
      5 => Some(MacintoshEncoding::Hebrew),
      6 => Some(MacintoshEncoding::Greek),
      7 => Some(MacintoshEncoding::Russian),
      8 => Some(MacintoshEncoding::RSymbol),
      9 => Some(MacintoshEncoding::Devanagari),
      10 => Some(MacintoshEncoding::Gurmukhi),
      11 => Some(MacintoshEncoding::Gujarati),
      12 => Some(MacintoshEncoding::Oriya),
      13 => Some(MacintoshEncoding::Bengali),
      14 => Some(MacintoshEncoding::Tamil),
      15 => Some(MacintoshEncoding::Telugu),
      16 => Some(MacintoshEncoding::Kannada),
      17 => Some(MacintoshEncoding::Malayalam),
      18 => Some(MacintoshEncoding::Sinhalese),
      19 => Some(MacintoshEncoding::Burmese),
      20 => Some(MacintoshEncoding::Khmer),
      21 => Some(MacintoshEncoding::Thai),
      22 => Some(MacintoshEncoding::Laotian),
      23 => Some(MacintoshEncoding::Georgian),
      24 => Some(MacintoshEncoding::Armenian),
      25 => Some(MacintoshEncoding::ChineseSimplified),
      26 => Some(MacintoshEncoding::Tibetan),
      27 => Some(MacintoshEncoding::Mongolian),
      28 => Some(MacintoshEncoding::Geez),
      29 => Some(MacintoshEncoding::Slavic),
      30 => Some(MacintoshEncoding::Vietnamese),
      31 => Some(MacintoshEncoding::Sindhi),
      32 => Some(MacintoshEncoding::Uninterpreted),
      _ => None,
    }
  }
}