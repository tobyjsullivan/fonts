pub struct AppleRoman {
    bytes: Vec<u8>,
}

impl AppleRoman {
    pub fn from_bytes(bytes: &[u8]) -> Self {
        Self {
            bytes: bytes.to_vec(),
        }
    }

    pub fn to_bytes(&self) -> &[u8] {
        &self.bytes[..]
    }
}

pub fn map_to_ucs2(input: u8) -> [u8; 2] {
    // All values less than 0x80 are identical to ASCII.
    if input < 0x80 {
        return [0x00, input];
    }

    match input {
        0x80 => [0x00, 0xC4],
        0x81 => [0x00, 0xC5],
        0x82 => [0x00, 0xC7],
        0x83 => [0x00, 0xC9],
        0x84 => [0x00, 0xD1],
        0x85 => [0x00, 0xD6],
        0x86 => [0x00, 0xDC],
        0x87 => [0x00, 0xE1],
        0x88 => [0x00, 0xE0],
        0x89 => [0x00, 0xE2],
        0x8A => [0x00, 0xE4],
        0x8B => [0x00, 0xE3],
        0x8C => [0x00, 0xE5],
        0x8D => [0x00, 0xE7],
        0x8E => [0x00, 0xE9],
        0x8F => [0x00, 0xE8],
        0x90 => [0x00, 0xEA],
        0x91 => [0x00, 0xEB],
        0x92 => [0x00, 0xED],
        0x93 => [0x00, 0xEC],
        0x94 => [0x00, 0xEE],
        0x95 => [0x00, 0xEF],
        0x96 => [0x00, 0xF1],
        0x97 => [0x00, 0xF3],
        0x98 => [0x00, 0xF2],
        0x99 => [0x00, 0xF4],
        0x9A => [0x00, 0xF6],
        0x9B => [0x00, 0xF5],
        0x9C => [0x00, 0xFA],
        0x9D => [0x00, 0xF9],
        0x9E => [0x00, 0xFB],
        0x9F => [0x00, 0xFC],
        0xA0 => [0x20, 0x20],
        0xA1 => [0x00, 0xB0],
        0xA2 => [0x00, 0xA2],
        0xA3 => [0x00, 0xA3],
        0xA4 => [0x00, 0xA7],
        0xA5 => [0x20, 0x22],
        0xA6 => [0x00, 0xB6],
        0xA7 => [0x00, 0xDF],
        0xA8 => [0x00, 0xAE],
        0xA9 => [0x00, 0xA9],
        0xAA => [0x21, 0x22],
        0xAB => [0x00, 0xB4],
        0xAC => [0x00, 0xA8],
        0xAD => [0x22, 0x60],
        0xAE => [0x00, 0xC6],
        0xAF => [0x00, 0xD8],
        0xB0 => [0x22, 0x1E],
        0xB1 => [0x00, 0xB1],
        0xB2 => [0x22, 0x64],
        0xB3 => [0x22, 0x65],
        0xB4 => [0x00, 0xA5],
        0xB5 => [0x00, 0xB5],
        0xB6 => [0x22, 0x02],
        0xB7 => [0x22, 0x11],
        0xB8 => [0x22, 0x0F],
        0xB9 => [0x03, 0xC0],
        0xBA => [0x22, 0x2B],
        0xBB => [0x00, 0xAA],
        0xBC => [0x00, 0xBA],
        0xBD => [0x03, 0xA9],
        0xBE => [0x00, 0xE6],
        0xBF => [0x00, 0xF8],
        0xC0 => [0x00, 0xBF],
        0xC1 => [0x00, 0xA1],
        0xC2 => [0x00, 0xAC],
        0xC3 => [0x22, 0x1A],
        0xC4 => [0x01, 0x92],
        0xC5 => [0x22, 0x48],
        0xC6 => [0x22, 0x06],
        0xC7 => [0x00, 0xAB],
        0xC8 => [0x00, 0xBB],
        0xC9 => [0x20, 0x26],
        0xCA => [0x00, 0xA0],
        0xCB => [0x00, 0xC0],
        0xCC => [0x00, 0xC3],
        0xCD => [0x00, 0xD5],
        0xCE => [0x01, 0x52],
        0xCF => [0x01, 0x53],
        0xD0 => [0x20, 0x13],
        0xD1 => [0x20, 0x14],
        0xD2 => [0x20, 0x1C],
        0xD3 => [0x20, 0x1D],
        0xD4 => [0x20, 0x18],
        0xD5 => [0x20, 0x19],
        0xD6 => [0x00, 0xF7],
        0xD7 => [0x25, 0xCA],
        0xD8 => [0x00, 0xFF],
        0xD9 => [0x01, 0x78],
        0xDA => [0x20, 0x44],
        // Note: prior to Mac OS 8.5, 0xDB mapped to 0x00A4.
        0xDB => [0x20, 0xAC],
        0xDC => [0x20, 0x39],
        0xDD => [0x20, 0x3A],
        0xDE => [0xFB, 0x01],
        0xDF => [0xFB, 0x02],
        0xE0 => [0x20, 0x21],
        0xE1 => [0x00, 0xB7],
        0xE2 => [0x20, 0x1A],
        0xE3 => [0x20, 0x1E],
        0xE4 => [0x20, 0x30],
        0xE5 => [0x00, 0xC2],
        0xE6 => [0x00, 0xCA],
        0xE7 => [0x00, 0xC1],
        0xE8 => [0x00, 0xCB],
        0xE9 => [0x00, 0xC8],
        0xEA => [0x00, 0xCD],
        0xEB => [0x00, 0xCE],
        0xEC => [0x00, 0xCF],
        0xED => [0x00, 0xCC],
        0xEE => [0x00, 0xD3],
        0xEF => [0x00, 0xD4],
        0xF0 => [0xF8, 0xFF],
        0xF1 => [0x00, 0xD2],
        0xF2 => [0x00, 0xDA],
        0xF3 => [0x00, 0xDB],
        0xF4 => [0x00, 0xD9],
        0xF5 => [0x01, 0x31],
        0xF6 => [0x02, 0xC6],
        0xF7 => [0x02, 0xDC],
        0xF8 => [0x00, 0xAF],
        0xF9 => [0x02, 0xD8],
        0xFA => [0x02, 0xD9],
        0xFB => [0x02, 0xDA],
        0xFC => [0x00, 0xB8],
        0xFD => [0x02, 0xDD],
        0xFE => [0x02, 0xDB],
        0xFF => [0x02, 0xC7],
        _ => panic!("Unknown byte {:?}", input),
    }
}
